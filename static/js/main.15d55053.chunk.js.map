{"version":3,"sources":["components/Navigation.js","components/Common/TemperatureIndicator.js","components/Utils/baseUtils.js","components/Common/Header.js","components/Common/NextDaysItem.js","components/Common/NextDays.js","assets/jsonExamples/examplePackets.js","components/Pages/Home.js","components/Common/FavoriteItem.js","components/Pages/Favorites.js","App.js","serviceWorker.js","index.js","components/Utils/localStorage.js"],"names":["Navigation","autoCompleteSearch","e","updateStageForSearch","toggleTempType","toggleTheme","props","dispatch","type","className","id","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onChange","checked","this","isCelsius","htmlFor","event","onSubmit","name","placeholder","children","React","Component","connect","state","TemperatureIndicator","setIndicatorColor","temp","TemperatureIndicators","temperature","icon","color","size","isHeadline","urlFromImgId","weatherImageNumber","celsiusToFahrenheit","deg","toFixed","Header","addToFavorites","cityId","cityName","onClick","city","WeatherText","WeatherIcon","src","crossOrigin","alt","Temperature","Metric","Value","NextDaysItem","epochTime","date","Date","getDay","weekday","getDayOfWeek","EpochDate","key","Minimum","Maximum","Night","Icon","Day","IconPhrase","rawDate","substring","indexOf","split","reverse","join","dateFormatting","NextDays","Headline","Text","DailyForecasts","map","day","index","defaultLocation","next5DaysPrediction","Home","mainCityId","FavoriteItem","title","Favorites","favorites","location","reducer","library","add","fab","fas","App","exact","path","component","Boolean","window","hostname","match","initialState","isLightTheme","defaultCity","defaultCityId","persistedState","serializedState","localStorage","getItem","console","log","JSON","parse","err","Error","loadState","store","createStore","action","favorite","slice","__REDUX_DEVTOOLS_EXTENSION__","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15d55053.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport './Navigation.scss';\r\n// import {Typeahead} from 'react-bootstrap-typeahead';\r\nimport {connect, Provider} from 'react-redux'\r\n\r\n// const cities = [\r\n//     \"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antigua &amp; Barbuda\",\r\n//     \"Argentina\",\"Armenia\",\"Aruba\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\r\n//     \"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bermuda\",\"Bhutan\",\"Bolivia\",\r\n//     \"Bosnia &amp; Herzegovina\",\"Botswana\",\"Brazil\",\"British Virgin Islands\",\"Brunei\",\r\n//     \"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Cape Verde\",\"Cayman Islands\",\r\n//     \"Central Arfrican Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Congo\",\"Cook Islands\",\r\n//     \"Costa Rica\",\"Cote D Ivoire\",\"Croatia\",\"Cuba\",\"Curacao\",\"Cyprus\",\"Czech Republic\",\"Denmark\",\r\n//     \"Djibouti\",\"Dominica\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial Guinea\",\r\n//     \"Eritrea\",\"Estonia\",\"Ethiopia\",\"Falkland Islands\",\"Faroe Islands\",\"Fiji\",\"Finland\",\"France\",\r\n//     \"French Polynesia\",\"French West Indies\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\r\n//     \"Gibraltar\",\"Greece\",\"Greenland\",\"Grenada\",\"Guam\",\"Guatemala\",\"Guernsey\",\"Guinea\",\r\n//     \"Guinea Bissau\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong Kong\",\"Hungary\",\"Iceland\",\"India\",\r\n//     \"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Isle of Man\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jersey\",\r\n//     \"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\r\n//     \"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macau\",\r\n//     \"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall Islands\",\r\n//     \"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\r\n//     \"Montserrat\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauro\",\"Nepal\",\"Netherlands\",\r\n//     \"Netherlands Antilles\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Korea\",\r\n//     \"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestine\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\r\n//     \"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Reunion\",\"Romania\",\"Russia\",\r\n//     \"Rwanda\",\"Saint Pierre &amp; Miquelon\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi Arabia\",\r\n//     \"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\r\n//     \"Somalia\",\"South Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"St Kitts &amp; Nevis\",\r\n//     \"St Lucia\",\"St Vincent\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\r\n//     \"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor L'Este\",\"Togo\",\"Tonga\",\"Trinidad &amp; Tobago\",\"Tunisia\",\r\n//     \"Turkey\",\"Turkmenistan\",\"Turks &amp; Caicos\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\r\n//     \"United Kingdom\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Vatican City\",\r\n//     \"Venezuela\",\"Vietnam\",\"Virgin Islands (US)\",\"Yemen\",\"Zambia\",\"Zimbabwe\"];\r\n\r\n\r\nclass Navigation extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         isCelsius: true,\r\n    //         isLightTheme: true\r\n    //     }\r\n    // }\r\n\r\n    autoCompleteSearch = e => {\r\n        return ; // TODO return search response in a debounce fashion.\r\n    }\r\n\r\n    updateStageForSearch = e => {\r\n        // e.target.value\r\n        return ; // TODO update the main stage with weather of the requested city.\r\n    }\r\n\r\n\r\n\r\n\r\n    toggleTempType = () => {\r\n\r\n    }\r\n\r\n    toggleTheme = () => {\r\n        this.props.dispatch({type: 'TOGGLE_THEME'})\r\n    }\r\n                                                                                    // py-1\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\" id=\"mainNav\">\r\n                    <div className=\"container\">\r\n                        <Link className=\"navbar-brand js-scroll-trigger\" to=\"/\">CastAWeather</Link>\r\n                        <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\"\r\n                                data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\">\r\n                            <span className={'navbar-toggler-icon'} />\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li>\r\n\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link js-scroll-trigger\" to=\"/\">Home</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link js-scroll-trigger\"\r\n                                          to=\"/favorites\">Favorites</Link>\r\n                                </li>\r\n                            </ul>\r\n\r\n                            {/*<div className=\"toggle-group\">*/}\r\n                            {/*    <div className=\"custom-control custom-switch\">*/}\r\n                            {/*        <input type=\"checkbox\"*/}\r\n                            {/*               className=\"custom-control-input\"*/}\r\n                            {/*               id=\"themeSwitch\"*/}\r\n                            {/*               onChange={this.toggleTheme}*/}\r\n                            {/*               checked={this.props.isLightTheme}*/}\r\n                            {/*        />*/}\r\n                            {/*        <label*/}\r\n                            {/*            className=\"custom-control-label text-white pr-2\"*/}\r\n                            {/*            for=\"themeSwitch\">Light / Dark Theme</label>*/}\r\n                            {/*    </div>*/}\r\n                            {/*</div>*/}\r\n                            <div className=\"toggle-group\">\r\n                                <div className=\"custom-control custom-switch\">\r\n                                    <input type=\"checkbox\"\r\n                                           className=\"custom-control-input\"\r\n                                           id=\"temperatureSwitch\"\r\n                                           onChange={() => this.props.dispatch({type: 'TOGGLE_TEMP'})}\r\n                                           checked={!this.props.isCelsius}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label text-white pr-2\"\r\n                                        htmlFor=\"temperatureSwitch\"\r\n                                    >C / F</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <form className=\"form-inline mt-2 mt-md-0 mr-2\"\r\n                                  onChange={event => this.autoCompleteSearch(event)}\r\n                                  onSubmit={event => this.updateStageForSearch(event)}>\r\n                                <input\r\n                                    className=\"form-control mr-sm-2\"\r\n                                    type=\"text\"\r\n                                    name=\"city\"\r\n                                    placeholder=\"Search a city..\"\r\n                                    aria-label=\"Search\" />\r\n                                <button\r\n                                    className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                                    type=\"submit\">Search</button>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport './TemperatureIndicator.scss'\r\n\r\nclass TemperatureIndicator extends React.Component {\r\n\r\n    setIndicatorColor = temp => {\r\n        if (temp >= 40) {\r\n            return [\"thermometer-full\", \"#d20025\"];\r\n        } else if (temp >= 30) {\r\n            return [\"thermometer-three-quarters\", '#d2ce0e'];\r\n        } else if (temp >= 20) {\r\n            return [\"thermometer-half\", '#2ad20d'];\r\n        } else if (temp >= 15) {\r\n            return [\"thermometer-quarter\", '#2428ec'];\r\n        } else {\r\n            return [\"thermometer-empty\", '#248eec'];\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const TemperatureIndicators =  this.setIndicatorColor(this.props.temperature)\r\n        return (\r\n            <FontAwesomeIcon\r\n                className={`primary mb-2 ${this.props.className}`}\r\n                icon={TemperatureIndicators[0]}\r\n                color={TemperatureIndicators[1]}\r\n                size={this.props.isHeadline ? '3x' : '1x'}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TemperatureIndicator;\r\n","\r\nexport const urlFromImgId = (weatherImageNumber) => {\r\n    const url = 'http://apidev.accuweather.com/developers/Media/Default/WeatherIcons/';\r\n    return `${url}${weatherImageNumber > 9 ?\r\n        weatherImageNumber\r\n        : `0`+weatherImageNumber}-s.png`\r\n}\r\n\r\nexport const celsiusToFahrenheit = deg => {\r\n    return ((deg * 1.8) + 32).toFixed(1);\r\n}\r\n\r\nexport const getDayOfWeek = (epochTime, id) => {\r\n    let date = (new Date(epochTime*1000)).getDay();\r\n    const weekday = [];\r\n    weekday[0] =  \"Sunday\";\r\n    weekday[1] = \"Monday\";\r\n    weekday[2] = \"Tuesday\";\r\n    weekday[3] = \"Wednesday\";\r\n    weekday[4] = \"Thursday\";\r\n    weekday[5] = \"Friday\";\r\n    weekday[6] = \"Saturday\";\r\n\r\n    return weekday[date];\r\n}\r\n\r\nexport const dateFormatting = (rawDate, id) => {\r\n    let date = rawDate.substring(0, rawDate.indexOf('T'));\r\n    date = date.split(\"-\").reverse().join(\"-\");\r\n    // might change it to being stored in localStorage but i dont like it robust.\r\n    // this.props.dispatch({\r\n    //     type: 'DATE_SET',\r\n    //     index: id,\r\n    //     value: date\r\n    // })\r\n    return date;\r\n}\r\n\r\n// extractTitleFromLink = location => {\r\n//     return location.Link.substring(location.Link.search(\"il\")+2);\r\n// }\r\n","import React from 'react'\r\nimport './Header.scss'\r\nimport TemperatureIndicator from \"./TemperatureIndicator\";\r\nimport {urlFromImgId, celsiusToFahrenheit} from '../Utils/baseUtils'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Header extends React.Component {\r\n\r\n    addToFavorites = (cityId, cityName) => {\r\n        this.props.dispatch({\r\n            type: 'ADD_FAVORITE',\r\n            cityId: cityId,\r\n            cityName: cityName\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"masthead border-bottom\">\r\n\r\n                <div className=\"d-flex justify-content-start pl-lg-5\">\r\n                    <div className=\"btn-group pt-3\">\r\n                        <button type=\"button\"\r\n                                className=\"btn btn-lg btn-outline-secondary\"\r\n                                // onClick={ () => this.addToFavorites(this.props.cityId, this.props.city)}\r\n                            onClick={() => this.props.dispatch({\r\n                                type: 'ADD_FAVORITE',\r\n                                id: 1112,\r\n                                city: 'test-a',\r\n                                temperature: '-25',\r\n                                WeatherText: 'Smooth Testarator',\r\n                                WeatherIcon: '11'\r\n                            })}\r\n                        >\r\n                            <FontAwesomeIcon icon=\"star\" />\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-lg btn-outline-secondary\">\r\n                            <FontAwesomeIcon icon=\"expand\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container d-flex h-100 align-items-center\">\r\n                    <div className=\"mx-auto text-center\">\r\n                        <img src={urlFromImgId(this.props.WeatherIcon)}\r\n                             crossOrigin=\"anonymous\"\r\n                             alt={this.props.WeatherText} />\r\n                        <h1 className=\"mx-auto my-0 text-uppercase text-white border city-info\">\r\n                            {this.props.city}</h1>\r\n                        <h2 className=\"text-white mx-auto mt-2 mb-5 city-info\">\r\n                            { this.props.isCelsius ? this.props.Temperature.Metric.Value\r\n                                : celsiusToFahrenheit(this.props.Temperature.Metric.Value)\r\n                            }&#176;\r\n                        </h2>\r\n                        <TemperatureIndicator\r\n                            temperature={this.props.Temperature.Metric.Value}\r\n                            color={\"red\"}\r\n                            isHeadline={true}\r\n                        />\r\n                        <h2 className=\"text-white mx-auto mt-2 mb-5 city-info\">\r\n                            {this.props.WeatherText}</h2>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react'\r\nimport TemperatureIndicator from \"./TemperatureIndicator\";\r\nimport {celsiusToFahrenheit, urlFromImgId, getDayOfWeek, dateFormatting} from \"../Utils/baseUtils\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass NextDaysItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-2\">\r\n                <div className=\"card mb-4 shadow-sm\">\r\n                    <div className=\"card-body text-center\">\r\n                        <h6 className=\"text-uppercase m-2\">{getDayOfWeek(this.props.EpochDate, this.props.key)}</h6>\r\n                        <h4 className=\"text-uppercase m-0\">\r\n                            { this.props.isCelsius ?\r\n                                `${this.props.Temperature.Minimum.Value}\\xB0\r\n                                 - ${this.props.Temperature.Maximum.Value}\\xB0`\r\n                                : `${celsiusToFahrenheit(this.props.Temperature.Minimum.Value)}\\xB0\r\n                                 - ${celsiusToFahrenheit(this.props.Temperature.Maximum.Value)}\\xB0`}\r\n                        </h4>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <TemperatureIndicator\r\n                                temperature={this.props.Temperature.Minimum.Value}/>\r\n                            <TemperatureIndicator\r\n                                temperature={this.props.Temperature.Maximum.Value}/>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <img src={urlFromImgId(this.props.Night.Icon)}\r\n                                 crossOrigin=\"anonymous\"\r\n                                 alt={this.props.Day.IconPhrase} />\r\n                            <img src={urlFromImgId(this.props.Day.Icon)}\r\n                                 crossOrigin=\"anonymous\"\r\n                                 alt={this.props.Night.IconPhrase} />\r\n                        </div>\r\n                        <hr className=\"my-4\" />\r\n                        <p className=\"text-uppercase m-2 small\">\r\n                            {dateFormatting(this.props.Date, this.props.key)}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(NextDaysItem);\r\n","import React from 'react'\r\nimport NextDaysItem from \"./NextDaysItem\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass NextDays extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h3 className={'mx-auto my-4 pl-4 text-uppercase'}>{this.props.Headline.Text}</h3>\r\n                <div className=\"row justify-content-center\">\r\n                    {this.props.DailyForecasts.map((day, index) => {\r\n                        return <NextDaysItem {...day} key={index} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(NextDays);\r\n","export const defaultLocation = [\r\n  {\r\n    \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n    \"EpochTime\": 1569320400,\r\n    \"WeatherText\": \"Sunny\",\r\n    \"WeatherIcon\": 1,\r\n    \"HasPrecipitation\": false,\r\n    \"PrecipitationType\": null,\r\n    \"IsDayTime\": true,\r\n    \"Temperature\": {\r\n      \"Metric\": {\r\n        \"Value\": 29.5,\r\n        \"Unit\": \"C\",\r\n        \"UnitType\": 17\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 85,\r\n        \"Unit\": \"F\",\r\n        \"UnitType\": 18\r\n      }\r\n    },\r\n    \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n  }\r\n]\r\n\r\nexport const next5DaysPrediction = {\r\n  \"Headline\": {\r\n    \"EffectiveDate\": \"2019-09-28T08:00:00+03:00\",\r\n    \"EffectiveEpochDate\": 1569646800,\r\n    \"Severity\": 4,\r\n    \"Text\": \"Pleasant this weekend\",\r\n    \"Category\": \"\",\r\n    \"EndDate\": null,\r\n    \"EndEpochDate\": null,\r\n    \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/extended-weather-forecast/215793?unit=c&lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?unit=c&lang=en-us\"\r\n  },\r\n  \"DailyForecasts\": [\r\n    {\r\n      \"Date\": \"2019-09-26T07:00:00+03:00\",\r\n      \"EpochDate\": 1569470400,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 22.5,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 30.8,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 1,\r\n        \"IconPhrase\": \"Sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 33,\r\n        \"IconPhrase\": \"Clear\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=1&unit=c&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=1&unit=c&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2019-09-27T07:00:00+03:00\",\r\n      \"EpochDate\": 1569556800,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 23.7,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 30.5,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 1,\r\n        \"IconPhrase\": \"Sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 34,\r\n        \"IconPhrase\": \"Mostly clear\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=2&unit=c&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=2&unit=c&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2019-09-28T07:00:00+03:00\",\r\n      \"EpochDate\": 1569643200,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 22.9,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 29.3,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 2,\r\n        \"IconPhrase\": \"Mostly sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 35,\r\n        \"IconPhrase\": \"Partly cloudy\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=3&unit=c&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=3&unit=c&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2019-09-29T07:00:00+03:00\",\r\n      \"EpochDate\": 1569729600,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 23.2,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 29.3,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 2,\r\n        \"IconPhrase\": \"Mostly sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 34,\r\n        \"IconPhrase\": \"Mostly clear\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=4&unit=c&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=4&unit=c&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2019-09-30T07:00:00+03:00\",\r\n      \"EpochDate\": 1569816000,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 23,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 29.5,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 2,\r\n        \"IconPhrase\": \"Mostly sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 35,\r\n        \"IconPhrase\": \"Partly cloudy\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=5&unit=c&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=5&unit=c&lang=en-us\"\r\n    }\r\n  ]\r\n}\r\n\r\nexport const favoriteLocations = [\r\n  {\r\n    \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n    \"EpochTime\": 1569320400,\r\n    \"WeatherText\": \"Sunny\",\r\n    \"WeatherIcon\": 1,\r\n    \"HasPrecipitation\": false,\r\n    \"PrecipitationType\": null,\r\n    \"IsDayTime\": true,\r\n    \"Temperature\": {\r\n      \"Metric\": {\r\n        \"Value\": 29.5,\r\n        \"Unit\": \"C\",\r\n        \"UnitType\": 17\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 85,\r\n        \"Unit\": \"F\",\r\n        \"UnitType\": 18\r\n      }\r\n    },\r\n    \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n  },\r\n  {\r\n    \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n    \"EpochTime\": 1569320400,\r\n    \"WeatherText\": \"Sunny\",\r\n    \"WeatherIcon\": 1,\r\n    \"HasPrecipitation\": false,\r\n    \"PrecipitationType\": null,\r\n    \"IsDayTime\": true,\r\n    \"Temperature\": {\r\n      \"Metric\": {\r\n        \"Value\": 41.5,\r\n        \"Unit\": \"C\",\r\n        \"UnitType\": 17\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 85,\r\n        \"Unit\": \"F\",\r\n        \"UnitType\": 18\r\n      }\r\n    },\r\n    \"MobileLink\": \"http://m.accuweather.com/en/il/eilat/215793/current-weather/215793?lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/eilat/215793/current-weather/215793?lang=en-us\"\r\n  },\r\n  {\r\n    \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n    \"EpochTime\": 1569320400,\r\n    \"WeatherText\": \"Sunny\",\r\n    \"WeatherIcon\": 1,\r\n    \"HasPrecipitation\": false,\r\n    \"PrecipitationType\": null,\r\n    \"IsDayTime\": true,\r\n    \"Temperature\": {\r\n      \"Metric\": {\r\n        \"Value\": 24,\r\n        \"Unit\": \"C\",\r\n        \"UnitType\": 17\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 85,\r\n        \"Unit\": \"F\",\r\n        \"UnitType\": 18\r\n      }\r\n    },\r\n    \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n  },\r\n  {\r\n    \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n    \"EpochTime\": 1569320400,\r\n    \"WeatherText\": \"Sunny\",\r\n    \"WeatherIcon\": 1,\r\n    \"HasPrecipitation\": false,\r\n    \"PrecipitationType\": null,\r\n    \"IsDayTime\": true,\r\n    \"Temperature\": {\r\n      \"Metric\": {\r\n        \"Value\": 29.5,\r\n        \"Unit\": \"C\",\r\n        \"UnitType\": 17\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 85,\r\n        \"Unit\": \"F\",\r\n        \"UnitType\": 18\r\n      }\r\n    },\r\n    \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n  }\r\n]\r\n\r\n// const favoriteLocations = [\r\n//     {title: 'Tel-Aviv', temperature: '27', description: 'Sunny', image: ''},\r\n//     {title: 'Haifa', temperature: '21', description: 'Smoggy', image: ''},\r\n//     {title: 'Ariel', temperature: '16', description: 'Chilly', image: ''},\r\n//     {title: 'Jerusalem', temperature: '14', description: 'Getting Cold Out Here', image: ''},\r\n//     {title: 'Netanya', temperature: '23', description: 'Nice and Sunny', image: ''},\r\n//     {title: 'Eilat', temperature: '42', description: 'Hot!!', image: ''},\r\n//     {title: 'Be\\'er-Sheva', temperature: '16', description: 'Chilly', image: ''},\r\n//     {title: 'Herzliya', temperature: '25', description: 'Nice and Sunny', image: ''}\r\n// ]\r\n\r\n\r\nconst fuckem = {\r\n  \"favorite\": {\r\n  \"id\": 296,\r\n      \"city\": \"Danielos\",\r\n      \"temperature\": \"25\",\r\n      \"WeatherText\": \"Smooth Operator\",\r\n      \"WeatherIcon\": \"5\"\r\n},\r\n  \"reducer\": [\r\n  {\r\n    \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n    \"EpochTime\": 1569320400,\r\n    \"WeatherText\": \"Sunny\",\r\n    \"WeatherIcon\": 1,\r\n    \"HasPrecipitation\": false,\r\n    \"PrecipitationType\": null,\r\n    \"IsDayTime\": true,\r\n    \"Temperature\": {\r\n      \"Metric\": {\r\n        \"Value\": 29.5,\r\n        \"Unit\": \"C\",\r\n        \"UnitType\": 17\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 85,\r\n        \"Unit\": \"F\",\r\n        \"UnitType\": 18\r\n      }\r\n    },\r\n    \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n  },\r\n  {\r\n    \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n    \"EpochTime\": 1569320400,\r\n    \"WeatherText\": \"Sunny\",\r\n    \"WeatherIcon\": 1,\r\n    \"HasPrecipitation\": false,\r\n    \"PrecipitationType\": null,\r\n    \"IsDayTime\": true,\r\n    \"Temperature\": {\r\n      \"Metric\": {\r\n        \"Value\": 29.5,\r\n        \"Unit\": \"C\",\r\n        \"UnitType\": 17\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 85,\r\n        \"Unit\": \"F\",\r\n        \"UnitType\": 18\r\n      }\r\n    },\r\n    \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n  },\r\n  {\r\n    \"id\": 2906,\r\n    \"city\": \"Danielia\",\r\n    \"temperature\": \"29\",\r\n    \"WeatherText\": \"Smooth Operator\",\r\n    \"WeatherIcon\": \"5\"\r\n  },\r\n  {\r\n    \"id\": 2906,\r\n    \"city\": \"Danielia\",\r\n    \"temperature\": \"29\",\r\n    \"WeatherText\": \"Smooth Operator\",\r\n    \"WeatherIcon\": \"5\"\r\n  },\r\n  {\r\n    \"id\": 2906,\r\n    \"city\": \"Danielia\",\r\n    \"temperature\": \"29\",\r\n    \"WeatherText\": \"Smooth Operator\",\r\n    \"WeatherIcon\": \"5\"\r\n  },\r\n  {\r\n    \"id\": 296,\r\n    \"city\": \"Danielos\",\r\n    \"temperature\": \"25\",\r\n    \"WeatherText\": \"Smooth Operator\",\r\n    \"WeatherIcon\": \"5\"\r\n  }\r\n]\r\n}\r\n","import React from 'react';\r\nimport './Home.scss';\r\nimport Header from \"../Common/Header\";\r\n// import axios from \"axios\";\r\nimport NextDays from \"../Common/NextDays\";\r\nimport {defaultLocation, next5DaysPrediction} from '../../assets/jsonExamples/examplePackets'\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Home extends React.Component {\r\n\r\n    // componentDidMount() {\r\n    //     // this.fetchWeatherData()\r\n    //     //     .then(value => this.phraseWeatherData(value))\r\n    //     //     .catch(reason => Error(`Failed fetching data, reason: ${reason}`))\r\n    //     // this.fetchLocationKey()\r\n    // }\r\n    //\r\n    // fetchLocationKey = location => {\r\n    //     // const url = `http://dataservice.accuweather.com/currentconditions/v1/${location}`;\r\n    //\r\n    //     const apiKey = '9MpqiOaZsD1p9P11PloCiFHszwVAkUcT';\r\n    //     const url = `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${apiKey}&q=${location}`;\r\n    //\r\n    //     axios.get(url)\r\n    //         .then(value => {\r\n    //             console.log('1Printed Value Received From axios one: '+value);\r\n    //             return value.key;\r\n    //         })\r\n    //         .catch(reason => {\r\n    //             console.log('2Catch Error: '+reason);\r\n    //             return '3Returned Error: '+reason;\r\n    //         });\r\n    //         // .finally(() => {});\r\n    //     // axios({\r\n    //     //     method: 'GET',\r\n    //     //\r\n    //     // }).\r\n    //\r\n    //     // return http://dataservice.accuweather.com/currentconditions/v1/{locationKey}\r\n    // }\r\n    //\r\n    // fetchNext5DaysDate = locationKey => {\r\n    //     const apiKey = `9MpqiOaZsD1p9P11PloCiFHszwVAkUcT`;\r\n    //     const metric = true;\r\n    //     const url = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${apiKey}&metric=${metric}`;\r\n    //     // axios(url)\r\n    //     //     .then(value => )\r\n    //     //     .catch(reason => )\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'jumbotron home'}>\r\n                <Header\r\n                    cityId={this.props.mainCityId}\r\n                    city={'Tel-Aviv'}\r\n                    isCelsius={this.props.isCelsius}\r\n                    {...defaultLocation[0]}\r\n                />\r\n                <NextDays {...next5DaysPrediction}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from 'react'\r\nimport './FavoriteItem.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport TemperatureIndicator from \"./TemperatureIndicator\";\r\nimport {connect} from \"react-redux\";\r\nimport {celsiusToFahrenheit} from \"../Utils/baseUtils\";\r\n\r\nclass FavoriteItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-4\">\r\n                <div className=\"card mb-4 shadow-sm\">\r\n                    <div className=\"card-body text-center\">\r\n                        <FontAwesomeIcon icon=\"map-marked-alt\" className=\"text-primary mb-2\" />\r\n                        <h4 className=\"text-uppercase m-0\">{this.props.title}</h4>\r\n                        <hr className=\"my-4\" />\r\n                        <TemperatureIndicator\r\n                            temperature={this.props.Temperature.Metric.Value}/>\r\n                        <h5 className=\"temperature-content\">\r\n                            { this.props.isCelsius ? this.props.Temperature.Metric.Value\r\n                                : celsiusToFahrenheit(this.props.Temperature.Metric.Value)\r\n                            }&#176;\r\n                        </h5>\r\n                        <div className=\"small text-black-50\">{this.props.WeatherText}</div>\r\n\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">\r\n                                    <FontAwesomeIcon icon=\"trash-alt\" />\r\n                                </button>\r\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">\r\n                                    <FontAwesomeIcon icon=\"expand\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(FavoriteItem);\r\n","import React from 'react'\r\nimport './Favorites.scss'\r\nimport FavoriteItem from \"../Common/FavoriteItem\";\r\nimport {connect} from \"react-redux\";\r\nimport {favoriteLocations} from '../../assets/jsonExamples/examplePackets'\r\n\r\nclass Favorites extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className=\"favorites-section py-4 bg-black\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.props.favorites.map((location, index) => {\r\n                                return <FavoriteItem {...location}\r\n                                    key={index}\r\n                                    />\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    favorites: state.reducer\r\n})\r\n\r\nexport default connect(mapStateToProps)(Favorites);\r\n","import React from 'react';\nimport './App.css';\nimport Navigation from \"./components/Navigation\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport Home from \"./components/Pages/Home\";\nimport Favorites from \"./components/Pages/Favorites\";\n\nlibrary.add(fab, fas);\n\nfunction App() {\n    return (\n        <Router>\n            <Navigation>\n                <Route\n                    exact={true}\n                    path=\"/\"\n                    component={Home}\n                />\n                <Route\n                    path={'/favorites'}\n                    component={Favorites}\n                />\n            </Navigation>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport { loadState, saveState } from './components/Utils/localStorage';\nimport {throttle} from 'lodash';\n\n\nconst initialState = {\n    isCelsius: true,\n    isLightTheme: true,\n    defaultCity: 'Tel-Aviv',\n    defaultCityId: 215793,\n    favorites: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'TOGGLE_TEMP':\n            return {\n                isCelsius: !state.isCelsius\n            };\n        case 'TOGGLE_THEME':\n            return {\n                isLightTheme: !state.isLightTheme\n            };\n        case 'ADD_FAVORITE':\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    city: action.city,\n                    temperature: action.temperature,\n                    WeatherText: action.WeatherText,\n                    WeatherIcon: action.WeatherIcon\n                }\n            ];\n        case 'UPDATE_FAVORITE':\n            return state.favorites.map(favorite => {\n                if (favorite.id !== action.id) {\n                    return favorite;\n                }\n                return {\n                    ...state,\n                    temperature: favorite.temperature,\n                    WeatherText: action.WeatherText,\n                    WeatherIcon: action.WeatherIcon\n                }\n            }\n        );\n        case 'REMOVE_FAVORITE':\n            return [...state.favorites.slice(0, action.index),\n                ...state.favorites.slice(action.index + 1)\n            ];\n        default:\n            return state;\n    }\n}\n\n\nconst persistedState = loadState();\nconst store = createStore(\n    reducer,\n    persistedState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nstore.subscribe(throttle(() => {\n    saveState(store.getState());\n}, 1000));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        console.log('LocalStorage: loadState() succeed. state: '+serializedState);\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        console.log(Error('LocalStorage: loadState() Failed. Error: '+err));\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        console.log('LocalStorage: saveState() succeed. state: '+serializedState);\r\n        localStorage.setItem('state', serializedState);\r\n\r\n    } catch (err) {\r\n        console.log(Error('LocalStorage: saveState() Failed. Error: '+err));\r\n    }\r\n}\r\n"],"sourceRoot":""}