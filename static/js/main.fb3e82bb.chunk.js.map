{"version":3,"sources":["components/Navigation.js","components/Common/TemperatureIndicator.js","components/Utils/baseUtils.js","components/Utils/actionCreators.js","components/Common/Header.js","components/Common/NextDaysItem.js","components/Common/NextDays.js","assets/jsonExamples/examplePackets.js","components/Utils/apiUtils.js","components/Pages/Home.js","components/Common/FavoriteItem.js","components/Pages/Favorites.js","App.js","serviceWorker.js","index.js","components/Utils/localStorage.js"],"names":["Navigation","this","props","isCelsius","isLightTheme","children","className","id","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onChange","dispatch","checked","htmlFor","event","autoCompleteSearch","onSubmit","updateStageForSearch","name","placeholder","React","Component","connect","state","TemperatureIndicator","setIndicatorColor","temp","TemperatureIndicators","temperature","icon","color","size","isHeadline","urlFromImgId","weatherImageNumber","celsiusToFahrenheit","deg","toFixed","getDayOfWeek","epochTime","date","Date","getDay","weekday","removeFromFavorites","cityId","CityId","Header","city","originCountry","weatherText","weatherIcon","onClick","City","OriginCountry","Temperature","WeatherText","WeatherIcon","addToFavorites","src","crossOrigin","alt","NextDaysItem","EpochDate","key","Night","Day","Minimum","Value","Maximum","Icon","IconPhrase","rawDate","substring","indexOf","split","reverse","join","dateFormatting","NextDays","DailyForecasts","map","day","index","next5DaysPrediction","requestLocationKey","location","url","encodeURIComponent","trim","axios","get","err","console","log","Home","defaultCity","then","value","data","EnglishName","Key","Country","requestCurrentConditionsByKey","Metric","catch","reason","currentlyDisplayed","FavoriteItem","Favorites","favorites","library","add","fab","fas","App","exact","path","component","Boolean","window","hostname","match","initialState","defaultCityId","TTL","persistedState","serializedState","localStorage","getItem","JSON","parse","Error","loadState","store","createStore","action","Object","assign","filter","favorite","__REDUX_DEVTOOLS_EXTENSION__","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","clear","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb3e82bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport './Navigation.scss';\r\n// import {Typeahead} from 'react-bootstrap-typeahead';\r\nimport {connect} from 'react-redux'\r\n\r\n// const cities = [\r\n//     \"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antigua &amp; Barbuda\",\r\n//     \"Argentina\",\"Armenia\",\"Aruba\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\r\n//     \"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bermuda\",\"Bhutan\",\"Bolivia\",\r\n//     \"Bosnia &amp; Herzegovina\",\"Botswana\",\"Brazil\",\"British Virgin Islands\",\"Brunei\",\r\n//     \"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Cape Verde\",\"Cayman Islands\",\r\n//     \"Central Arfrican Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Congo\",\"Cook Islands\",\r\n//     \"Costa Rica\",\"Cote D Ivoire\",\"Croatia\",\"Cuba\",\"Curacao\",\"Cyprus\",\"Czech Republic\",\"Denmark\",\r\n//     \"Djibouti\",\"Dominica\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial Guinea\",\r\n//     \"Eritrea\",\"Estonia\",\"Ethiopia\",\"Falkland Islands\",\"Faroe Islands\",\"Fiji\",\"Finland\",\"France\",\r\n//     \"French Polynesia\",\"French West Indies\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\r\n//     \"Gibraltar\",\"Greece\",\"Greenland\",\"Grenada\",\"Guam\",\"Guatemala\",\"Guernsey\",\"Guinea\",\r\n//     \"Guinea Bissau\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong Kong\",\"Hungary\",\"Iceland\",\"India\",\r\n//     \"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Isle of Man\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jersey\",\r\n//     \"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\r\n//     \"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macau\",\r\n//     \"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall Islands\",\r\n//     \"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\r\n//     \"Montserrat\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauro\",\"Nepal\",\"Netherlands\",\r\n//     \"Netherlands Antilles\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Korea\",\r\n//     \"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestine\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\r\n//     \"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Reunion\",\"Romania\",\"Russia\",\r\n//     \"Rwanda\",\"Saint Pierre &amp; Miquelon\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi Arabia\",\r\n//     \"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\r\n//     \"Somalia\",\"South Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"St Kitts &amp; Nevis\",\r\n//     \"St Lucia\",\"St Vincent\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\r\n//     \"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor L'Este\",\"Togo\",\"Tonga\",\"Trinidad &amp; Tobago\",\"Tunisia\",\r\n//     \"Turkey\",\"Turkmenistan\",\"Turks &amp; Caicos\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\r\n//     \"United Kingdom\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Vatican City\",\r\n//     \"Venezuela\",\"Vietnam\",\"Virgin Islands (US)\",\"Yemen\",\"Zambia\",\"Zimbabwe\"];\r\n\r\n\r\nclass Navigation extends React.Component {\r\n                                                                                    // py-1\r\n    render() {\r\n        const {\r\n            isCelsius,\r\n            isLightTheme,\r\n            children\r\n        } = this.props;\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\" id=\"mainNav\">\r\n                    <div className=\"container\">\r\n                        <Link className=\"navbar-brand js-scroll-trigger\" to=\"/\">CastAWeather</Link>\r\n                        <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\"\r\n                                data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\">\r\n                            <span className={'navbar-toggler-icon'} />\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li>\r\n\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link js-scroll-trigger\" to=\"/\">Home</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link js-scroll-trigger\"\r\n                                          to=\"/favorites\">Favorites</Link>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"toggle-group\">\r\n                                <div className=\"custom-control custom-switch\">\r\n                                    <input type=\"checkbox\"\r\n                                           className=\"custom-control-input\"\r\n                                           id=\"themeSwitch\"\r\n                                           onChange={() => this.props.dispatch({type: 'TOGGLE_THEME'})}\r\n                                           checked={!isLightTheme}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label text-white pr-2\"\r\n                                        htmlFor=\"themeSwitch\"\r\n                                    >Light / Dark Theme</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-switch\">\r\n                                    <input type=\"checkbox\"\r\n                                           className=\"custom-control-input\"\r\n                                           id=\"temperatureSwitch\"\r\n                                           onChange={() => this.props.dispatch({type: 'TOGGLE_TEMP'})}\r\n                                           checked={!isCelsius}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label text-white pr-2\"\r\n                                        htmlFor=\"temperatureSwitch\"\r\n                                    >C / F</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <form className=\"form-inline mt-2 mt-md-0 mr-2\"\r\n                                  onChange={event => this.autoCompleteSearch(event)}\r\n                                  onSubmit={event => this.updateStageForSearch(event)}>\r\n                                <input\r\n                                    className=\"form-control mr-sm-2\"\r\n                                    type=\"text\"\r\n                                    name=\"city\"\r\n                                    placeholder=\"Search a city..\"\r\n                                    aria-label=\"Search\" />\r\n                                <button\r\n                                    className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                                    type=\"submit\">Search</button>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isCelsius: state.isCelsius,\r\n    isLightTheme: state.isLightTheme\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport './TemperatureIndicator.scss'\r\n\r\nclass TemperatureIndicator extends React.Component {\r\n\r\n    setIndicatorColor = temp => {\r\n        if (temp >= 40) {\r\n            return [\"thermometer-full\", \"#d20025\"];\r\n        } else if (temp >= 30) {\r\n            return [\"thermometer-three-quarters\", '#d2ce0e'];\r\n        } else if (temp >= 20) {\r\n            return [\"thermometer-half\", '#2ad20d'];\r\n        } else if (temp >= 15) {\r\n            return [\"thermometer-quarter\", '#2428ec'];\r\n        } else {\r\n            return [\"thermometer-empty\", '#248eec'];\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const TemperatureIndicators =  this.setIndicatorColor(this.props.temperature)\r\n        return (\r\n            <FontAwesomeIcon\r\n                className={`primary mb-2 ${this.props.className}`}\r\n                icon={TemperatureIndicators[0]}\r\n                color={TemperatureIndicators[1]}\r\n                size={this.props.isHeadline ? '3x' : '1x'}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TemperatureIndicator;\r\n","\r\nexport const urlFromImgId = (weatherImageNumber) => {\r\n    const url = 'http://apidev.accuweather.com/developers/Media/Default/WeatherIcons/';\r\n    return `${url}${weatherImageNumber > 9 ?\r\n        weatherImageNumber\r\n        : `0`+weatherImageNumber}-s.png`\r\n}\r\n\r\nexport const celsiusToFahrenheit = deg => {\r\n    return ((deg * 1.8) + 32).toFixed(1);\r\n}\r\n\r\nexport const getDayOfWeek = (epochTime, id) => {\r\n    let date = (new Date(epochTime*1000)).getDay();\r\n    const weekday = [];\r\n    weekday[0] =  \"Sunday\";\r\n    weekday[1] = \"Monday\";\r\n    weekday[2] = \"Tuesday\";\r\n    weekday[3] = \"Wednesday\";\r\n    weekday[4] = \"Thursday\";\r\n    weekday[5] = \"Friday\";\r\n    weekday[6] = \"Saturday\";\r\n\r\n    return weekday[date];\r\n}\r\n\r\nexport const dateFormatting = (rawDate, id) => {\r\n    let date = rawDate.substring(0, rawDate.indexOf('T'));\r\n    date = date.split(\"-\").reverse().join(\"-\");\r\n    return date;\r\n};\r\n\r\n// TODO add case of empty string\r\nexport const replaceSpacesInCityQuery = (cityName) => {\r\n    return encodeURIComponent(cityName.trim());\r\n};\r\n","//\r\n// export const addFavorite = (fav) => ({\r\n//     type: 'ADD_FAVORITE',\r\n//     id: fav.id,\r\n//     city: fav.city,\r\n//     temperature: fav.temperature,\r\n//     WeatherText: fav.WeatherText,\r\n//     WeatherIcon: fav.WeatherIcon\r\n// });\r\n//\r\n// export const toggleTemperature = () => ({\r\n//     type: 'TOGGLE_TEMP',\r\n//     isCelsius: !this.props.isCelsius\r\n// });\r\n//\r\n// export const toggleTheme = () => ({\r\n//     type: 'TOGGLE_THEME',\r\n//     isLightTheme: !this.props.isLightTheme\r\n// });\r\n//\r\n// export const updateFavoriteItem = (favorites, favItem) => ({\r\n//     type: 'UPDATE_FAVORITE',\r\n//     favorites: favorites.map(favorite => {\r\n//             if (favorite.id !== favItem.id) {\r\n//                 return favorite;\r\n//             }\r\n//             return {\r\n//                 ...favorite,\r\n//                 temperature: favItem.temperature,\r\n//                 WeatherText: favItem.WeatherText,\r\n//                 WeatherIcon: favItem.WeatherIcon\r\n//             }\r\n//         }\r\n//     )\r\n// });\r\n\r\nexport const addToFavorites = (cityId, city, originCountry,\r\n                               weatherText, weatherIcon, temperature) => ({\r\n    type: 'ADD_FAVORITE',\r\n    CityId: cityId,\r\n    City: city,\r\n    OriginCountry: originCountry,\r\n    Temperature: temperature,\r\n    WeatherText: weatherText,\r\n    WeatherIcon: weatherIcon\r\n});\r\n\r\nexport const removeFromFavorites = (cityId) => ({\r\n    type: 'REMOVE_FAVORITE',\r\n    CityId: cityId,\r\n});\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport './Header.scss'\r\nimport TemperatureIndicator from \"./TemperatureIndicator\";\r\nimport {urlFromImgId, celsiusToFahrenheit} from '../Utils/baseUtils';\r\nimport {addToFavorites, removeFromFavorites} from '../Utils/actionCreators';\r\n\r\n\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        const {\r\n            city,\r\n            cityId,\r\n            originCountry,\r\n            isCelsius,\r\n            weatherText,\r\n            weatherIcon,\r\n            temperature\r\n        } = this.props;\r\n        return (\r\n            <header className=\"masthead border-bottom\">\r\n                <div className=\"d-flex justify-content-start pl-lg-5\">\r\n                    <div className=\"btn-group pt-3\">\r\n                        <button type=\"button\"\r\n                                className=\"btn btn-lg btn-outline-secondary\"\r\n                                onClick={() => {\r\n                                    this.props.dispatch(\r\n                                        addToFavorites(\r\n                                            cityId,\r\n                                            city,\r\n                                            originCountry,\r\n                                            weatherText,\r\n                                            weatherIcon,\r\n                                            temperature\r\n                                        )\r\n                                    )\r\n                                }}>\r\n                            <FontAwesomeIcon icon=\"star\" />\r\n                        </button>\r\n                        <button type=\"button\"\r\n                                className=\"btn btn-lg btn-outline-secondary\"\r\n                                onClick={() => {\r\n                                    this.props.dispatch(removeFromFavorites(cityId))\r\n                                }}\r\n                        >\r\n                            <FontAwesomeIcon icon=\"trash-alt\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container d-flex h-100 align-items-center\">\r\n                    <div className=\"mx-auto text-center\">\r\n                        <h1 className=\"mx-auto my-0 text-uppercase text-white border city-info\">{city}</h1>\r\n                        <p className=\"mx-auto my-0 text-white city-info\">{originCountry}</p>\r\n                        <img src={urlFromImgId(weatherIcon)}\r\n                             crossOrigin=\"anonymous\"\r\n                             alt={weatherText} />\r\n                        <h2 className=\"text-white mx-auto mt-2 mb-5 city-info\">\r\n                            {isCelsius ? temperature\r\n                                : celsiusToFahrenheit(temperature)\r\n                            }&#176;\r\n                        </h2>\r\n                        <TemperatureIndicator\r\n                            temperature={temperature}\r\n                            color={\"red\"}\r\n                            isHeadline={true}\r\n                        />\r\n                        <h2 className=\"text-white mx-auto mt-2 mb-5 city-info\">\r\n                            {weatherText}</h2>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(Header);\r\n","import React from 'react'\r\nimport TemperatureIndicator from \"./TemperatureIndicator\";\r\nimport {celsiusToFahrenheit, urlFromImgId, getDayOfWeek, dateFormatting} from \"../Utils/baseUtils\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass NextDaysItem extends React.Component {\r\n    render() {\r\n        const {\r\n            EpochDate,\r\n            key,\r\n            isCelsius,\r\n            Temperature,\r\n            Night,\r\n            Day,\r\n            Date\r\n        } = this.props;\r\n        return (\r\n            <div className=\"col-md-2\">\r\n                <div className=\"card mb-4 shadow-sm\">\r\n                    <div className=\"card-body text-center\">\r\n                        <h6 className=\"text-uppercase m-2\">{getDayOfWeek(EpochDate, key)}</h6>\r\n                        <h4 className=\"text-uppercase m-0\">\r\n                            {isCelsius ?\r\n                                `${Temperature.Minimum.Value}\\xB0\r\n                                 - ${Temperature.Maximum.Value}\\xB0`\r\n                                : `${celsiusToFahrenheit(Temperature.Minimum.Value)}\\xB0\r\n                                 - ${celsiusToFahrenheit(Temperature.Maximum.Value)}\\xB0`}\r\n                        </h4>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <TemperatureIndicator\r\n                                temperature={Temperature.Minimum.Value}/>\r\n                            <TemperatureIndicator\r\n                                temperature={Temperature.Maximum.Value}/>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <img src={urlFromImgId(Night.Icon)}\r\n                                 crossOrigin=\"anonymous\"\r\n                                 alt={Day.IconPhrase} />\r\n                            <img src={urlFromImgId(Day.Icon)}\r\n                                 crossOrigin=\"anonymous\"\r\n                                 alt={Night.IconPhrase} />\r\n                        </div>\r\n                        <hr className=\"my-4\" />\r\n                        <p className=\"text-uppercase m-2 small\">\r\n                            {dateFormatting(Date, key)}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isCelsius: state.isCelsius\r\n})\r\n\r\nexport default connect(mapStateToProps)(NextDaysItem);\r\n","import React from 'react'\r\nimport NextDaysItem from \"./NextDaysItem\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass NextDays extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h3 className={'mx-auto my-4 pl-4 text-uppercase'}>The Next 5 Days:</h3>\r\n                <div className=\"row justify-content-center\">\r\n                    {this.props.DailyForecasts.map((day, index) => {\r\n                        return <NextDaysItem {...day} key={index} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect()(NextDays);\r\n","export const defaultLocation = [\r\n  {\r\n    \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n    \"EpochTime\": 1569320400,\r\n    \"WeatherText\": \"Sunny\",\r\n    \"WeatherIcon\": 1,\r\n    \"HasPrecipitation\": false,\r\n    \"PrecipitationType\": null,\r\n    \"IsDayTime\": true,\r\n    \"Temperature\": {\r\n      \"Metric\": {\r\n        \"Value\": 29.5,\r\n        \"Unit\": \"C\",\r\n        \"UnitType\": 17\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 85,\r\n        \"Unit\": \"F\",\r\n        \"UnitType\": 18\r\n      }\r\n    },\r\n    \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n  }\r\n]\r\n\r\nexport const next5DaysPrediction = {\r\n  \"Headline\": {\r\n    \"EffectiveDate\": \"2019-09-28T08:00:00+03:00\",\r\n    \"EffectiveEpochDate\": 1569646800,\r\n    \"Severity\": 4,\r\n    \"Text\": \"Pleasant this weekend\",\r\n    \"Category\": \"\",\r\n    \"EndDate\": null,\r\n    \"EndEpochDate\": null,\r\n    \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/extended-weather-forecast/215793?unit=c&lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?unit=c&lang=en-us\"\r\n  },\r\n  \"DailyForecasts\": [\r\n    {\r\n      \"Date\": \"2019-09-26T07:00:00+03:00\",\r\n      \"EpochDate\": 1569470400,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 22.5,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 30.8,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 1,\r\n        \"IconPhrase\": \"Sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 33,\r\n        \"IconPhrase\": \"Clear\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=1&unit=c&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=1&unit=c&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2019-09-27T07:00:00+03:00\",\r\n      \"EpochDate\": 1569556800,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 23.7,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 30.5,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 1,\r\n        \"IconPhrase\": \"Sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 34,\r\n        \"IconPhrase\": \"Mostly clear\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=2&unit=c&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=2&unit=c&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2019-09-28T07:00:00+03:00\",\r\n      \"EpochDate\": 1569643200,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 22.9,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 29.3,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 2,\r\n        \"IconPhrase\": \"Mostly sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 35,\r\n        \"IconPhrase\": \"Partly cloudy\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=3&unit=c&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=3&unit=c&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2019-09-29T07:00:00+03:00\",\r\n      \"EpochDate\": 1569729600,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 23.2,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 29.3,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 2,\r\n        \"IconPhrase\": \"Mostly sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 34,\r\n        \"IconPhrase\": \"Mostly clear\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=4&unit=c&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=4&unit=c&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2019-09-30T07:00:00+03:00\",\r\n      \"EpochDate\": 1569816000,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 23,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 29.5,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 2,\r\n        \"IconPhrase\": \"Mostly sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 35,\r\n        \"IconPhrase\": \"Partly cloudy\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=5&unit=c&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/daily-weather-forecast/215793?day=5&unit=c&lang=en-us\"\r\n    }\r\n  ]\r\n}\r\n\r\n// export const favoriteLocations = [\r\n//   {\r\n//     \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n//     \"EpochTime\": 1569320400,\r\n//     \"WeatherText\": \"Sunny\",\r\n//     \"WeatherIcon\": 1,\r\n//     \"HasPrecipitation\": false,\r\n//     \"PrecipitationType\": null,\r\n//     \"IsDayTime\": true,\r\n//     \"Temperature\": {\r\n//       \"Metric\": {\r\n//         \"Value\": 29.5,\r\n//         \"Unit\": \"C\",\r\n//         \"UnitType\": 17\r\n//       },\r\n//       \"Imperial\": {\r\n//         \"Value\": 85,\r\n//         \"Unit\": \"F\",\r\n//         \"UnitType\": 18\r\n//       }\r\n//     },\r\n//     \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n//     \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n//   },\r\n//   {\r\n//     \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n//     \"EpochTime\": 1569320400,\r\n//     \"WeatherText\": \"Sunny\",\r\n//     \"WeatherIcon\": 1,\r\n//     \"HasPrecipitation\": false,\r\n//     \"PrecipitationType\": null,\r\n//     \"IsDayTime\": true,\r\n//     \"Temperature\": {\r\n//       \"Metric\": {\r\n//         \"Value\": 41.5,\r\n//         \"Unit\": \"C\",\r\n//         \"UnitType\": 17\r\n//       },\r\n//       \"Imperial\": {\r\n//         \"Value\": 85,\r\n//         \"Unit\": \"F\",\r\n//         \"UnitType\": 18\r\n//       }\r\n//     },\r\n//     \"MobileLink\": \"http://m.accuweather.com/en/il/eilat/215793/current-weather/215793?lang=en-us\",\r\n//     \"Link\": \"http://www.accuweather.com/en/il/eilat/215793/current-weather/215793?lang=en-us\"\r\n//   },\r\n//   {\r\n//     \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n//     \"EpochTime\": 1569320400,\r\n//     \"WeatherText\": \"Sunny\",\r\n//     \"WeatherIcon\": 1,\r\n//     \"HasPrecipitation\": false,\r\n//     \"PrecipitationType\": null,\r\n//     \"IsDayTime\": true,\r\n//     \"Temperature\": {\r\n//       \"Metric\": {\r\n//         \"Value\": 24,\r\n//         \"Unit\": \"C\",\r\n//         \"UnitType\": 17\r\n//       },\r\n//       \"Imperial\": {\r\n//         \"Value\": 85,\r\n//         \"Unit\": \"F\",\r\n//         \"UnitType\": 18\r\n//       }\r\n//     },\r\n//     \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n//     \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n//   },\r\n//   {\r\n//     \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n//     \"EpochTime\": 1569320400,\r\n//     \"WeatherText\": \"Sunny\",\r\n//     \"WeatherIcon\": 1,\r\n//     \"HasPrecipitation\": false,\r\n//     \"PrecipitationType\": null,\r\n//     \"IsDayTime\": true,\r\n//     \"Temperature\": {\r\n//       \"Metric\": {\r\n//         \"Value\": 29.5,\r\n//         \"Unit\": \"C\",\r\n//         \"UnitType\": 17\r\n//       },\r\n//       \"Imperial\": {\r\n//         \"Value\": 85,\r\n//         \"Unit\": \"F\",\r\n//         \"UnitType\": 18\r\n//       }\r\n//     },\r\n//     \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n//     \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n//   }\r\n// ]\r\n\r\n// const favoriteLocations = [\r\n//     {title: 'Tel-Aviv', temperature: '27', description: 'Sunny', image: ''},\r\n//     {title: 'Haifa', temperature: '21', description: 'Smoggy', image: ''},\r\n//     {title: 'Ariel', temperature: '16', description: 'Chilly', image: ''},\r\n//     {title: 'Jerusalem', temperature: '14', description: 'Getting Cold Out Here', image: ''},\r\n//     {title: 'Netanya', temperature: '23', description: 'Nice and Sunny', image: ''},\r\n//     {title: 'Eilat', temperature: '42', description: 'Hot!!', image: ''},\r\n//     {title: 'Be\\'er-Sheva', temperature: '16', description: 'Chilly', image: ''},\r\n//     {title: 'Herzliya', temperature: '25', description: 'Nice and Sunny', image: ''}\r\n// ]\r\n\r\n\r\n// const fuckem = {\r\n//   \"favorite\": {\r\n//   \"id\": 296,\r\n//       \"city\": \"Danielos\",\r\n//       \"temperature\": \"25\",\r\n//       \"WeatherText\": \"Smooth Operator\",\r\n//       \"WeatherIcon\": \"5\"\r\n// },\r\n//   \"reducer\": [\r\n//   {\r\n//     \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n//     \"EpochTime\": 1569320400,\r\n//     \"WeatherText\": \"Sunny\",\r\n//     \"WeatherIcon\": 1,\r\n//     \"HasPrecipitation\": false,\r\n//     \"PrecipitationType\": null,\r\n//     \"IsDayTime\": true,\r\n//     \"Temperature\": {\r\n//       \"Metric\": {\r\n//         \"Value\": 29.5,\r\n//         \"Unit\": \"C\",\r\n//         \"UnitType\": 17\r\n//       },\r\n//       \"Imperial\": {\r\n//         \"Value\": 85,\r\n//         \"Unit\": \"F\",\r\n//         \"UnitType\": 18\r\n//       }\r\n//     },\r\n//     \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n//     \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n//   },\r\n//   {\r\n//     \"LocalObservationDateTime\": \"2019-09-24T13:20:00+03:00\",\r\n//     \"EpochTime\": 1569320400,\r\n//     \"WeatherText\": \"Sunny\",\r\n//     \"WeatherIcon\": 1,\r\n//     \"HasPrecipitation\": false,\r\n//     \"PrecipitationType\": null,\r\n//     \"IsDayTime\": true,\r\n//     \"Temperature\": {\r\n//       \"Metric\": {\r\n//         \"Value\": 29.5,\r\n//         \"Unit\": \"C\",\r\n//         \"UnitType\": 17\r\n//       },\r\n//       \"Imperial\": {\r\n//         \"Value\": 85,\r\n//         \"Unit\": \"F\",\r\n//         \"UnitType\": 18\r\n//       }\r\n//     },\r\n//     \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\",\r\n//     \"Link\": \"http://www.accuweather.com/en/il/tel-aviv-port/215793/current-weather/215793?lang=en-us\"\r\n//   },\r\n//   {\r\n//     \"id\": 2906,\r\n//     \"city\": \"Danielia\",\r\n//     \"temperature\": \"29\",\r\n//     \"WeatherText\": \"Smooth Operator\",\r\n//     \"WeatherIcon\": \"5\"\r\n//   },\r\n//   {\r\n//     \"id\": 2906,\r\n//     \"city\": \"Danielia\",\r\n//     \"temperature\": \"29\",\r\n//     \"WeatherText\": \"Smooth Operator\",\r\n//     \"WeatherIcon\": \"5\"\r\n//   },\r\n//   {\r\n//     \"id\": 2906,\r\n//     \"city\": \"Danielia\",\r\n//     \"temperature\": \"29\",\r\n//     \"WeatherText\": \"Smooth Operator\",\r\n//     \"WeatherIcon\": \"5\"\r\n//   },\r\n//   {\r\n//     \"id\": 296,\r\n//     \"city\": \"Danielos\",\r\n//     \"temperature\": \"25\",\r\n//     \"WeatherText\": \"Smooth Operator\",\r\n//     \"WeatherIcon\": \"5\"\r\n//   }\r\n// ]\r\n// }\r\n\r\nexport const locationSearch =\r\n    [\r\n      {\r\n        \"Version\": 1,\r\n        \"Key\": \"215854\",\r\n        \"Type\": \"City\",\r\n        \"Rank\": 31,\r\n        \"LocalizedName\": \"Tel Aviv\",\r\n        \"EnglishName\": \"Tel Aviv\",\r\n        \"PrimaryPostalCode\": \"\",\r\n        \"Region\": {\r\n          \"ID\": \"MEA\",\r\n          \"LocalizedName\": \"Middle East\",\r\n          \"EnglishName\": \"Middle East\"\r\n        },\r\n        \"Country\": {\r\n          \"ID\": \"IL\",\r\n          \"LocalizedName\": \"Israel\",\r\n          \"EnglishName\": \"Israel\"\r\n        },\r\n        \"AdministrativeArea\": {\r\n          \"ID\": \"TA\",\r\n          \"LocalizedName\": \"Tel Aviv\",\r\n          \"EnglishName\": \"Tel Aviv\",\r\n          \"Level\": 1,\r\n          \"LocalizedType\": \"District\",\r\n          \"EnglishType\": \"District\",\r\n          \"CountryID\": \"IL\"\r\n        },\r\n        \"TimeZone\": {\r\n          \"Code\": \"IDT\",\r\n          \"Name\": \"Asia/Jerusalem\",\r\n          \"GmtOffset\": 3,\r\n          \"IsDaylightSaving\": true,\r\n          \"NextOffsetChange\": \"2019-10-26T23:00:00Z\"\r\n        },\r\n        \"GeoPosition\": {\r\n          \"Latitude\": 32.045,\r\n          \"Longitude\": 34.77,\r\n          \"Elevation\": {\r\n            \"Metric\": {\r\n              \"Value\": 34,\r\n              \"Unit\": \"m\",\r\n              \"UnitType\": 5\r\n            },\r\n            \"Imperial\": {\r\n              \"Value\": 111,\r\n              \"Unit\": \"ft\",\r\n              \"UnitType\": 0\r\n            }\r\n          }\r\n        },\r\n        \"IsAlias\": false,\r\n        \"SupplementalAdminAreas\": [],\r\n        \"DataSets\": [\r\n          \"Alerts\"\r\n        ]\r\n      }\r\n    ]\r\n\r\nexport const currentCondition =\r\n    [\r\n      {\r\n        \"LocalObservationDateTime\": \"2019-10-01T16:10:00+03:00\",\r\n        \"EpochTime\": 1569935400,\r\n        \"WeatherText\": \"Mostly sunny\",\r\n        \"WeatherIcon\": 2,\r\n        \"HasPrecipitation\": false,\r\n        \"PrecipitationType\": null,\r\n        \"IsDayTime\": true,\r\n        \"Temperature\": {\r\n          \"Metric\": {\r\n            \"Value\": 28.3,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Imperial\": {\r\n            \"Value\": 83,\r\n            \"Unit\": \"F\",\r\n            \"UnitType\": 18\r\n          }\r\n        },\r\n        \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\"\r\n      }\r\n    ]\r\n","import axios from \"axios\";\r\nimport {replaceSpacesInCityQuery} from \"./baseUtils\";\r\n\r\n// const apiKey = '9MpqiOaZsD1p9P11PloCiFHszwVAkUcT';\r\nconst apiKey = 'test';\r\n\r\nexport const requestLocationKey = location => {\r\n    location = replaceSpacesInCityQuery(location);\r\n    const url = 'http://dataservice.accuweather.com/locations/v1/cities/search?apikey='+apiKey+'&q='+location;\r\n    try {\r\n        return axios.get(url)\r\n    } catch (err) {\r\n        console.log('requestLocationKey - Failed. Error: ', err);\r\n    }\r\n};\r\n\r\nexport const requestCurrentConditionsByKey = key => {\r\n    const url = 'http://dataservice.accuweather.com/currentconditions/v1/'+key+'?apikey='+apiKey;\r\n    try {\r\n        return axios.get(url)\r\n    } catch (err) {\r\n        console.log('requestLocationKey - Failed. Error: ', err);\r\n    }\r\n};\r\n\r\n// fetchNext5DaysDate = locationKey => {\r\n//     const apiKey = `9MpqiOaZsD1p9P11PloCiFHszwVAkUcT`;\r\n//     const metric = true;\r\n//     const url = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${apiKey}&metric=${metric}`;\r\n//     // axios(url)\r\n//     //     .then(value => )\r\n//     //     .catch(reason => )\r\n// }\r\n","import React from 'react';\r\nimport './Home.scss';\r\nimport Header from \"../Common/Header\";\r\nimport NextDays from \"../Common/NextDays\";\r\nimport {connect} from \"react-redux\";\r\nimport {next5DaysPrediction} from '../../assets/jsonExamples/examplePackets'\r\nimport {requestLocationKey, requestCurrentConditionsByKey} from '../Utils/apiUtils'\r\n\r\nclass Home extends React.Component {\r\n    componentDidMount() {\r\n        requestLocationKey(this.props.defaultCity)\r\n            .then(value => {\r\n                console.log('1. Location value: ', value);\r\n                return value.data\r\n            })\r\n            .then(value => {\r\n                console.log('2. Location.data value: ', value);\r\n                return value[0]\r\n            })\r\n            .then(value => {\r\n                console.log('3. Location.data[0] value: ', value.key);\r\n                this.props.dispatch({\r\n                    type: 'UPDATE_CURRENT_CITY_INFO',\r\n                    City: value.EnglishName,\r\n                    CityId: value.Key,\r\n                    OriginCountry: value.Country.EnglishName,\r\n                });\r\n                return value.Key\r\n            })\r\n            .then(value => requestCurrentConditionsByKey(value))\r\n            .then(value => value.data)\r\n            .then(value => value[0])\r\n            .then(value => {\r\n                this.props.dispatch({\r\n                    type: 'UPDATE_CURRENT_CITY_CONDITIONS',\r\n                    WeatherText: value.WeatherText,\r\n                    WeatherIcon: value.WeatherIcon,\r\n                    Temperature: value.Temperature.Metric.Value\r\n                });\r\n                return value\r\n            })\r\n            .catch(reason => console.log('requestCurrentConditions error: ',reason));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'jumbotron home'}>\r\n                <Header {...this.props} />\r\n                <NextDays {...next5DaysPrediction}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isCelsius: state.isCelsius,\r\n    defaultCity: state.defaultCity,\r\n    city: state.currentlyDisplayed.City,\r\n    cityId: state.currentlyDisplayed.CityId,\r\n    originCountry: state.currentlyDisplayed.OriginCountry,\r\n    weatherText: state.currentlyDisplayed.WeatherText,\r\n    weatherIcon: state.currentlyDisplayed.WeatherIcon,\r\n    temperature: state.currentlyDisplayed.Temperature\r\n})\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from 'react'\r\nimport './FavoriteItem.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport TemperatureIndicator from \"./TemperatureIndicator\";\r\nimport {connect} from \"react-redux\";\r\nimport {celsiusToFahrenheit, urlFromImgId} from \"../Utils/baseUtils\";\r\nimport {removeFromFavorites} from '../Utils/actionCreators';\r\n\r\nclass FavoriteItem extends React.Component {\r\n    render() {\r\n        const {\r\n            isCelsius,\r\n            CityId,\r\n            City,\r\n            OriginCountry,\r\n            Temperature,\r\n            WeatherText,\r\n            WeatherIcon\r\n        } = this.props;\r\n        return (\r\n            <div className=\"col-md-4\">\r\n                <div className=\"card mb-4 shadow-sm\">\r\n                    <div className=\"card-body text-center\">\r\n                        <img src={urlFromImgId(WeatherIcon)}\r\n                             crossOrigin=\"anonymous\"\r\n                             alt={WeatherText} />\r\n                        <h4 className=\"text-uppercase m-0\">{City}</h4>\r\n                        <p className=\"mx-auto my-0\">{OriginCountry}</p>\r\n                        <hr className=\"my-4\" />\r\n                        <TemperatureIndicator\r\n                            temperature={Temperature}/>\r\n                        <h5 className=\"temperature-content\">\r\n                            { isCelsius ? Temperature\r\n                                : celsiusToFahrenheit(Temperature)\r\n                            }&#176;\r\n                        </h5>\r\n                        <div className=\"small text-black-50\">{WeatherText}</div>\r\n\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <div className=\"btn-group\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-sm btn-outline-secondary\"\r\n                                    onClick={() => this.props.dispatch(removeFromFavorites(CityId))}\r\n\r\n                                >\r\n                                    <FontAwesomeIcon icon=\"trash-alt\"/>\r\n                                </button>\r\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">\r\n                                    <FontAwesomeIcon icon=\"expand\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(FavoriteItem);\r\n","import React from 'react'\r\nimport './Favorites.scss'\r\nimport FavoriteItem from \"../Common/FavoriteItem\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Favorites extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className=\"favorites-section py-4 bg-black\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {this.props.favorites.map((location, index) => {\r\n                                return <FavoriteItem {...location}\r\n                                    key={index}\r\n                                    />\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    favorites: state.favorites\r\n})\r\n\r\nexport default connect(mapStateToProps)(Favorites);\r\n","import React from 'react';\nimport './App.css';\nimport Navigation from \"./components/Navigation\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport Home from \"./components/Pages/Home\";\nimport Favorites from \"./components/Pages/Favorites\";\n\nlibrary.add(fab, fas);\n\nfunction App() {\n    return (\n        <Router>\n            <Navigation>\n                <Route\n                    exact={true}\n                    path=\"/\"\n                    component={Home}\n                />\n                <Route\n                    path={'/favorites'}\n                    component={Favorites}\n                />\n            </Navigation>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport { loadState, saveState } from './components/Utils/localStorage';\nimport throttle from 'lodash/throttle';\n\n\nconst initialState = {\n    isCelsius: true,\n    isLightTheme: true,\n    defaultCity: 'Tel Aviv',\n    defaultCityId: 215854,\n    TTL: '',\n    currentlyDisplayed: {\n        City: 'cityT',\n        CityId: 111999,\n        OriginCountry: 'WhoTown',\n        WeatherText: 'Sun Gone Nuclear',\n        WeatherIcon: '5',\n        Temperature: '5000'\n    },\n    favorites: [\n        {\n            City: 'New York',\n            CityId: '159259',\n            OriginCountry: 'USA',\n            Temperature: 14,\n            WeatherText: 'Chilly',\n            WeatherIcon: '11'\n        },\n        {\n            City: 'Jakulugaba',\n            CityId: '158259',\n            OriginCountry: 'Jakika',\n            Temperature: 2500,\n            WeatherText: 'Hot!!',\n            WeatherIcon: '2'\n        },\n        {\n            City: 'New York',\n            CityId: '119259',\n            OriginCountry: 'USA',\n            Temperature: 14,\n            WeatherText: 'Chilly',\n            WeatherIcon: '11'\n        },\n        {\n            City: 'Jakulugaba',\n            CityId: '158559',\n            OriginCountry: 'Jakika',\n            Temperature: 2500,\n            WeatherText: 'Hot!!',\n            WeatherIcon: '2'\n        },\n    ]\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'TOGGLE_TEMP':\n            return Object.assign({},\n                state,\n                {isCelsius: !state.isCelsius});\n        case 'TOGGLE_THEME':\n            return Object.assign({},\n                state,\n                {isLightTheme: !state.isLightTheme});\n        case 'ADD_FAVORITE':\n            return Object.assign({},\n                state,\n                {\n                    favorites: [\n                        ...state.favorites,\n                        {\n                            City: action.City,\n                            CityId: action.CityId,\n                            OriginCountry: action.OriginCountry,\n                            Temperature: action.Temperature,\n                            WeatherText: action.WeatherText,\n                            WeatherIcon: action.WeatherIcon\n                        }\n                    ]\n                }\n            );\n        case 'REMOVE_FAVORITE':\n            return Object.assign({},\n                state,\n                {\n                    favorites: state.favorites.filter(favorite => {\n                        if (favorite.CityId !== action.CityId) {\n                            return favorite\n                        }\n                    })\n                }\n            );\n        case 'UPDATE_CURRENT_CITY_INFO':\n            return Object.assign({},\n                state,\n                {\n                    currentlyDisplayed: Object.assign({},\n                        state.currentlyDisplayed,\n                        {\n                            City: action.City,\n                            CityId: action.CityId,\n                            OriginCountry: action.OriginCountry\n                        }\n                    )\n                }\n            );\n        case 'UPDATE_CURRENT_CITY_CONDITIONS':\n            return Object.assign({},\n                state,\n                {\n                    currentlyDisplayed: Object.assign({},\n                        state.currentlyDisplayed,\n                        {\n                            WeatherText: action.WeatherText,\n                            WeatherIcon: action.WeatherIcon,\n                            Temperature: action.Temperature\n                        }\n                    )\n                }\n            );\n        default:\n            return state || [];\n    }\n}\n\nconst persistedState = loadState();\nconst store = createStore(\n    reducer,\n    persistedState,\n    window.__REDUX_DEVTOOLS_EXTENSION__\n    && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(throttle(() => {\n    saveState(store.getState());\n}, 1000));\n\nReactDOM.render(\n    <Provider store={store}>\n        {localStorage.clear()}\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        console.log(Error('LocalStorage: loadState() Failed. Error: '+err));\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch (err) {\r\n        console.log(Error('LocalStorage: saveState() Failed. Error: '+err));\r\n    }\r\n}\r\n"],"sourceRoot":""}